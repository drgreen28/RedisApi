apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-api-deployment
  namespace: redis
  labels:
    app: redis-api
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: redis-api
  template:
    metadata:
      labels:
        app: redis-api
    spec:
      containers:
        - name: redis-api
          image: drgreen28/redisapi:1.0.4
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
---
kind: Service
apiVersion: v1
metadata:
  name: redis-api-service
  namespace: redis
spec:
  type: NodePort
  selector:
    app: redis-api
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30007
---
apiVersion: v1
kind: Service
metadata:
  name: redis-master
  labels:
    app: redis
    tier: backend
    role: master
spec:
  type: LoadBalancer
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
    tier: backend
    role: master
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-master
spec:
  selector:
    matchLabels:
      app: redis
      role: master
      tier: backend
  serviceName: redis-master
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        role: master
        tier: backend
    spec:
      containers:
      - name: master
        image: k8s.gcr.io/redis:e2e
        args: ["--save", "900", "1", "--save", "30", "2"]
        ports:
        - containerPort: 6379
        command:
          - redis-server
        volumeMounts:
          - name: redis-data
            mountPath: /data
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-data
---
apiVersion: v1
kind: Service
metadata:
  name: redis-slave
  labels:
    app: redis
    tier: backend
    role: slave
spec:
  ports:
  - port: 6379
  selector:
    app: redis
    tier: backend
    role: slave
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-slave
spec:
  selector:
    matchLabels:
      app: redis
      role: slave
      tier: backend
  replicas: 2
  template:
    metadata:
      labels:
        app: redis
        role: slave
        tier: backend
    spec:
      containers:
      - name: slave
        image: gcr.io/google_samples/gb-redisslave:v1
        env:
        - name: GET_HOSTS_FROM
          value: env
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-data
spec:
  accessModes:
  - ReadWriteOnce 
  resources:
    requests:
      storage: 512Mi