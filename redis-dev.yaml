apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-api-deployment
  namespace: redis
  labels:
    app: redis-api
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: redis-api
  template:
    metadata:
      labels:
        app: redis-api
    spec:
      containers:
        - name: redis-api
          image: drgreen28/redisapi:1.0.4
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
---
apiVersion: v1
kind: Service
metadata:
  name: redis-api-service
spec:
  type: ClusterIP
  ports:
  - port: 80
  selector:
    app: redis-api
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: redis-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  tls:
  - hosts:
    - redis.perksthunderdome.com
    secretName: tls-secret
  rules:
  - host: redis.perksthunderdome.com
    http:
      paths:
      - backend:
          serviceName: redis-api-service
          servicePort: 80
        path: /(.*)